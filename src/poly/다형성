
// 다형성(Polymorphism)

다형성을 이해하기 위해서는 크게 2가지 핵심 이론을 알아야 한다.

1. 다형적 참조
   - 부모 타입의 변수가 자식 인스턴스를 참조
   - Parent poly = new Child()
   - Child child1 = new Parent()` : 컴파일 오류 발생 >> 자식 타입은 부모 타입을 담을 수 없다.
   - Child 인스턴스를 만들었다. 이 경우 자식 타입인 `Child` 를 생성했기 때문에 메모리 상에 `Child` 와
     `Parent` 가 모두 생성된다.

   // 다형적 참조의 한계
      - childMethod() 호출 불가.
        상속 관계는 부모 방향으로 찾아 올라갈 수는 있지만, 자식 방향으로 찾아 내려갈 수 없다.

   1) 캐스팅
      - 다운 캐스팅: 자식 타입으로 변경 `Child child = (Child) poly`
      - 업 캐스팅: 부모 타입으로 변경


2. 메서드 오버라이딩
   - 다형성을 이루는 또 하나의 중요한 핵심 이론은 메서드 오버라이딩이다.
   - "오버라이딩 된 메서드가 항상 우선권을 가진다"
     만약, 자식 클래스에서 오바라이딩 하고 손자에서도 같은 메서드를 오버라이딩 하면 손자의 오버라이딩
     메서드가 우선권을 가진다.

>> 지금까지 설명한 코드에는 2가지의 문제가 존재한다.
Animal 클래스를 생성할 수 있는 문제,
Animal 클래스를 상속 받는 곳에서 sound() 메서드 오버라이딩을 하지 않을 가능성
-- 추상 클래스를 이용하여 해결 할 수 있음