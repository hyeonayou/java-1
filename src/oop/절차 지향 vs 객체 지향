
// 절차 지향 프로그래밍 vs 객체 지향 프로그래밍

1. 절차 지향 프로그래밍
   - 절차 지향 프로그래밍은 이름 그대로 절차 지향. 실행 순서를 중요하게 생각하는 방식.
   - 프로그램의 흐름을 순차적으로 따르며 처리하는 방식, 즉 "어떻게" 를 중심으로 프로그래밍 한다.

2. 객체 지향 프로그래밍
   - 객체 지향 프로그래밍은 이름 그대로 객체를 지향함.
   - 실제 세계의 사물이나 사건을 객체로 보고, 객체들 간의 상호작용을 중심으로 프로그래밍 하는 방식.

 => 두 방식의 차이
    절차 지향은 데이터와 해당 데이터에 대한 처리 방식이 분리되어 있다.
    객체 지향에서는 데이터와 그 데이터에 대한 행동(메서드)이 하나의 '객체'안에 함께 포함되어 있다.


// 캡슐화
   1) MusicPlayer 를 보면 음악 플레이어를 구성하기 위한 속성과 기능이 마치 하나의 캡슐에 쌓여있는 것 같다.
      이렇게 속성(데이터)과 기능(메서드)을 하나로 묶어서 필요한 기능을 메서드를 통해 외부에 제공하는 것을 캡슐화라 한다.

// 객체란?
   1) 자동차
      - 속성: 차량 색상, 현재 속도
      - 기능: 엑셀, 브레이크, 문 열기, 문 닫기

   2) 동물
      - 속성: 색상, 키, 온도
      - 기능: 먹는다, 걷는다.