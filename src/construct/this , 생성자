
// 생성자

1. this
   Member 클래스의 메서드의 매개변수가, Member 클래스의 멤버 변수와 이름이 똑같을때,
   두 변수의 이름이 같다면 어떻게 둘을 구분해야 할까?
   - 이 경우 멤버 변수보다 매개변수가 코드 블럭의 더 안쪽에 있기 때문에 매개변수가 우선순위를 가진다.
     initMember(String name, int age ,...) 메서드 안ㅈ에서 name이라고 적으면 매개변수에 접근하게 된다.
     멤버 변수에 접근하려면 앞에 'this.' 라고 붙여주면 된다. 여기서 this는 인스턴스 자신의 참조값을 가리킨다.

   1) this의 제거
      this.name = name 에서 this 를 제거하게 되면 둘 다 매개변수를 뜻하게 된다. 따라서 멤버변수의 값이 변경되지 않는다.
   - 매개변수의 이름과 멤버 변수의 이름이 같은 경우 this를 사용해서 둘을 명확하게 구분해야 한다.

   2) this의 생략
      - this는 생략할 수 있다. 이 경우 변수를 찾을 때 가까운 지역변수(매개변수도 지역변수다.)를 먼저 찾고 없으면
        그 다음으로 멤버 변수를 찾는다.

   3) this() 사용
      - 생성자도 메서드 오버로딩처럼 매개변수만 다르게 해서 여러 생성자를 제공할 수 있다.
      - this() 라는 기능을 사용하면 생성자 내부에서 자신의 생성자를 호출할 수 있다.
        MemberConstruct(String name, int age)
        MemberConstruct(String name, int age, int grade)
        위 두개의 메서드에서 첫번째 메서드 안에 'this(name, age, 50)' 와 같은 값을 입력하게 되면
        두번째 메서드가 호출된다.

2. 생성자
   생성자는 특정 클래스 내부에 클래스 명과 같은 메서드명으로 정의하여 사용한다.
   1) 생성자의 특징
      - 생성자의 이름은 클래스 이름과 같아야 한다. 따라서 첫 글자도 대문자로 시작한다.
      - 생성자는 반환 타입이 없다. 비워두어야 한다.

   생성자의 진짜 장점은 객체를 생성할 때 직접 정의한 생성자가 있다면 **직접 정의한 생성자를 반드시 호출해야 한다는 점
   이다.
   !! 생성자를 사용하면 필수값 입력을 보장할 수 있다 !!

   2) 기본 생성자
      - 매개변수가 없는 생성자를 기본 생성자라 한다.
      - 클래스에 생성자가 하나도 없으면 자바 컴파일러는 매개변수가 없고, 작동하는 코드가 없는 기본 생성자를 자동으로 만들어준다.
      - 생성자가 하나라도 있으면 자바는 기본 생성자를 만들지 않는다.
